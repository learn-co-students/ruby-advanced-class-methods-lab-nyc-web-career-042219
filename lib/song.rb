require 'pry'
class Song
  attr_accessor :name, :artist_name
  @@all = []


  def self.all
    @@all
  end

  def save
    self.class.all << self
  end

  def self.create
    song = self.new
    @@all << song
    song
  end

  def self.new_by_name(name)
    song = self.new
    song.name = name
    song
  end

  def self.create_by_name(name)
    song = self.new
    song.name = name
    @@all << song
    song
  end

  def self.find_by_name(name)
    Song.all.find {|x| x.name == name}
  end

  def self.find_or_create_by_name(name)
    self.create_by_name(name)
    self.find_by_name(name)
  end

  def self.alphabetical
    songsbyname = Song.all.map.sort_by {|x| x.name}
    #sorts_by enum using a set of keys generated by mapping the values in enum through the given block.
    songsbyname
  end

  def self.new_from_filename(filename)
    filename.chomp!(".mp3")
    data = filename.split(" - ")
    song = Song.new
    song.name = data[1]
    song.artist_name = data[0]
    song
  end

  def self.create_from_filename(filename)
    filename.chomp!(".mp3")
    data = filename.split(" - ")
    song = Song.new
    song.name = data[1]
    song.artist_name = data[0]
    @@all << song
    song
  end

  def self.destroy_all
    @@all.clear
  end
  
end
